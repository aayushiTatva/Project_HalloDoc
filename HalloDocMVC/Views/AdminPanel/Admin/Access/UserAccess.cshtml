@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "~/Views/Shared/Admin/_LayoutAdmin.cshtml";
}
@model HalloDocMVC.DBEntity.ViewModels.AdminPanel.PaginationUserAccess
@using static HalloDocMVC.DBEntity.ViewModels.AdminPanel.Constant
@{
    var enumData = from AccountType e in Enum.GetValues(typeof(AccountType))
                   select new
                   {
                       ID = (int)e,
                       Name = e.ToString()
                   };
}
<div class="container mt-4">
    <div class="row">
        <div class="col-6">
            <h4><strong>User Access</strong></h4>
        </div>
    </div>
    <div class="row ">
        <div class="card shadow">
            <div class="card-body border-0">
                <div class="row">
                    <div class="col-md-7">
                        <div class="search col-lg-3 col-sm-6 col-xs-12 mb-1">
                            <div class="ms-1">
                                <i class="fa fa-search"></i>
                                <select class="form-select" data-allow-clear="true" asp-for="role" tabindex="-1" id="roledropdown" onchange="getdatabyrole()" asp-items="@(new SelectList(enumData,"ID","Name"))" data-control="select2" data-placeholder="Select Level">
                                    
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-5 d-flex">
                        <a class="btn provideracc m-1 align-self-center" asp-controller="Access" asp-action="PhysicianAddEdit">
                            Create Provider Account
                        </a>
                        <a class="btn provideracc m-1 align-self-center" asp-controller="Access" asp-action="AdminAddEdit">
                            Create Admin Account
                        </a>
                    </div>
                </div>
                <div class="table-responsive">
                    <table class="table table-responsive mt-3 mb-0">
                        <thead>
                            <tr>
                                @{
                                    <th scope="col">Account Type  <i class="fa-solid fa-arrow-up"></i></th>
                                    <th scope="col">Account POC</th>
                                    <th scope="col">Phone</th>
                                    <th scope="col">Status</th>
                                    <th scope="col">Open Requests</th>
                                    <th scope="col">Actions</th>
                                }
                            </tr>
                        </thead>
                        <tbody class="table-group-divider" id="rolebody">
                            @foreach (var item in Model.UsersAccessList)
                            {
                                <tr>
                                    <td>@Enum.GetName(typeof(AccountType), item.AccountType)</td>
                                    <td>@item.FirstName</td>
                                    <td>@item.PhoneNumber</td>
                                    <td>@Enum.GetName(typeof(AdminStatus), item.Status)</td>
                                    <td>@item.OpenRequest</td>
                                    <td>
                                        @if (item.IsAdmin)
                                        {
                                            <a asp-action="AdminEdit" asp-controller="Access" asp-route-id="@item.UserId" class="contactprovider shadow-none document-button mx-1 mb-2">
                                                <button class="contactprovider">
                                                    Edit
                                                </button>
                                            </a>
                                        }
                                        else
                                        {
                                            <a asp-action="PhysicianAddEdit" asp-controller="Access" asp-route-id="@item.UserId" class="contactprovider shadow-none document-button mx-1 mb-2">
                                                <button class="contactprovider">
                                                    Edit
                                                </button>
                                            </a>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <nav aria-label="Page navigation example" id="paginationUser">
                    <div class="d-flex justify-content-between mx-2 mt-3">
                        <div>
                            @if (Model.TotalPages == 0)
                            {
                                Model.CurrentPage = 0;
                            }
                            Page @Model.CurrentPage / @Model.TotalPages
                        </div>
                        <div>
                            <ul class="pagination pagination-container">
                                @{
                                    int i;
                                    <form id="paginationform" asp-controller="Access" asp-action="UserAccess" novalidate="novalidate" class="d-flex">
                                        <input type="hidden" asp-for="PageSize" />
                                        <input type="hidden" asp-for="CurrentPage" id="currentpagevalue" />
                                        <input type="hidden" asp-for="role" id="role" />

                                        @if (@Model.CurrentPage > 1)
                                        {
                                        <li class="page-item me-2">
                                            <button class="btn shadow-none" onclick="setpagenumber('previous')">&lt;</button>
                                        </li>
                                        }
                                        else
                                        {
                                        <li class="me-2 page-item">
                                            <button class="disabled btn">&lt;</button>
                                        </li>
                                        }
                                        @for (i = 1; i <= @Model.TotalPages; i++)
                                        {
                                        <li class="page-item me-2">
                                            <button class="@(i == @Model.CurrentPage ? "activePage" : "") btn shadow-none" onclick="setpagenumber(@i)">@i</button>
                                        </li>
                                        }
                                        @if (@Model.TotalPages > @Model.CurrentPage)
                                        {
                                        <li class="page-item me-2">
                                            <button class="btn shadow-none" onclick="setpagenumber('next')">&gt;</button>
                                        </li>
                                        }
                                        else
                                        {
                                        <li class="page-item">
                                            <button class="btn disabled">&gt;</button>
                                        </li>
                                        }
                                    </form>
                                }
                            </ul>
                        </div>
                    </div>
                </nav>
            </div>
        </div>
    </div>
</div>
<script>
    function AssignEmail(e) {
        console.log(e);
        document.getElementById('Email').value = e;
    }
    function getdatabyrole() {
        var role = $("#roledropdown").val();
        $.ajax({
            method: "POST",
            url: "@Url.Action("UserAccess", "Access")?role=" + role,
            cache: false,
            success: function (response) {
                var data = $(response).find('tbody').html();
                $('#rolebody').html(data);
                var data1 = $(response).find('nav').html();
                $("#paginationUser").html(data1);
                console.log(response);
            },
            error: function () {
                alert("Error while Loading data.");
            }
        });
    }
    $(document).ready(function () {
        $('#saveChangesButton').click(function () {
            $('#saveChangesForm').submit();
        });
        var initialState = {};
        $('.form-check-inputs').each(function () {
            initialState[this.id] = this.checked;
        });
        $('.form-check-inputs').change(function () {
            var changedValues = {};
            $('.form-check-inputs').each(function () {
                if (this.checked !== initialState[this.id]) {
                    changedValues[this.id] = this.checked;
                }
            });
            $('#changeValue').val(JSON.stringify(changedValues));
            console.log(changedValues);
            if (Object.keys(changedValues).length > 0) {
                $('#saveChangesButton').show();
            } else {
                $('#saveChangesButton').hide();
            }
        });
    });
    function setpagenumber(e) {
        if (e == 'previous') {
            var cp = @Model.CurrentPage-1;
            $('#currentpagevalue').val(cp);
        }
        else if (e == 'next') {
            var cp = @Model.CurrentPage + 1;
            $('#currentpagevalue').val(cp);
        }
        else {
            $('#currentpagevalue').val(e);
        }
        $("#role").val($("#roledropdown").val());
        $("#paginationform").submit();

        console.log("Hello pagination");
    }
</script>