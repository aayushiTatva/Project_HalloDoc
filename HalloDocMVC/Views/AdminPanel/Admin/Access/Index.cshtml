@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "~/Views/Shared/Admin/_LayoutAdmin.cshtml";
}
@model HalloDocMVC.DBEntity.ViewModels.AdminPanel.PaginationRoles
@using static HalloDocMVC.DBEntity.ViewModels.AdminPanel.Constant

<div class="container mt-4">
    <div class="row">
        <div class="col-6">
            <h4><strong>Provider Information</strong></h4>
        </div>
    </div>
    <div class="row ">
        <div class="card shadow">
            <div class="card-body border-0">
                <div class="row">
                    <div class="col-md-6 col-sm-12 ms-auto d-flex">
                        <div class="col-md-3">
                            <form method="post" asp-controller="Providers" asp-action="ChangeNotification" id="saveChangesForm">
                                <input type="hidden" id="changeValue" name="changedValues" />
                                <button class="btn relogin mx-3 shadow-none" style="display:none;" id="saveChangesButton">Save Changes</button>
                            </form>
                        </div>
                        <a class="ms-auto pt-3" asp-controller="Access" asp-action="CreateRole"><button class="btn relogin mx-3 shadow-none ">Create Access</button></a> @*
                        <a class="ms-auto pt-3" asp-controller="Providers" asp-action="PhysicianProfile"><button class="contactprovider shadow-none ">Create Access</button></a>*@
                    </div>
                </div>
                <div class="table-responsive">
                    <table class="table table-responsive mt-3 mb-0">
                        <thead>
                            <tr>
                                @{

                                    <th class="col-4">Name</th>
                                    <th class="col-4">Account Type</th>
                                    <th class="col-4  ms-auto ">Status</th>
                                    @*
                                    <th scope="col">Account Type</th>
                                    <th scope="col">Status</th>*@
                                }
                            </tr>
                        </thead>
                        <tbody class="table-group-divider" id="providerbody">
                            @foreach (var item in Model.RolesList)
                            {
                                <tr>
                                    <td>@item.RoleName</td>
                                    <td>@Enum.GetName(typeof(AccountType), item.AccountType)</td>
                                    <td scope="col">
                                        <a asp-action="CreateRole" asp-controller="Access" asp-route-id="@item.RoleId" class="btn relogin d-none d-sm-block mx-3 shadow-none mb-2 float-start">
                                                Edit
                                        </a>
                                        <button class="btn relogin d-none d-sm-block mx-3 shadow-none mb-2 deletebtn float-start">
                                            Delete
                                        </button>
                                        <form id="deleteroleform" asp-action="DeleteRole" asp-controller="Access" asp-route-roleid="@item.RoleId">
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                        @*<th class="col-4 ms-auto float-right/th*@
                    </table>
                </div>
                <nav aria-label="Page navigation example" id="Pagination">
                    <div class="d-flex justify-content-between mx-2 mt-3">
                        <div>
                            @if (Model.TotalPages == 0)
                            {
                                Model.CurrentPage = 0;
                            }
                            Page @Model.CurrentPage / @Model.TotalPages
                        </div>
                        <div>
                            <ul class="pagination pagination-container">
                                @{
                                    int i;
                                    <form id="paginationform" asp-controller="Access" asp-action="Index" novalidate="novalidate" class="d-flex">
                                        <input type="hidden" asp-for="PageSize" />
                                        <input type="hidden" asp-for="CurrentPage" id="currentpagevalue" />

                                        @if (@Model.CurrentPage > 1)
                                        {
                                        <li class="page-item me-2">
                                            <button class="btn shadow-none" onclick="setpagenumber('previous')">&lt;</button>
                                        </li>
                                        }
                                        else
                                        {
                                        <li class="me-2 page-item">
                                            <button class="disabled btn">&lt;</button>
                                        </li>
                                        }
                                        @for (i = 1; i <= @Model.TotalPages; i++)
                                        {
                                        <li class="page-item me-2">
                                            <button class="@(i == @Model.CurrentPage ? "activePage" : "") btn shadow-none" onclick="setpagenumber(@i)">@i</button>
                                        </li>
                                        }
                                        @if (@Model.TotalPages > @Model.CurrentPage)
                                        {
                                        <li class="page-item me-2">
                                            <button class="btn shadow-none" onclick="setpagenumber('next')">&gt;</button>
                                        </li>
                                        }
                                        else
                                        {
                                        <li class="page-item">
                                            <button class="btn disabled">&gt;</button>
                                        </li>
                                        }
                                    </form>
                                }
                            </ul>
                        </div>
                    </div>
                </nav>
            </div>
        </div>
    </div>
</div>
<script>
    $(function () {
        $('.deletebtn').on('click', function () {
            Swal.fire({
                title: "Do you want to delete role ?",
                showDenyButton: false,
                showCancelButton: true,
                confirmButtonText: "Yes",
                denyButtonText: `Cancel`
            }).then((result) => {
                if (result.isConfirmed) {
                    $('#deleteroleform').submit();
                }
                /* Read more about isConfirmed, isDenied below */
            });
        });
    });
    function setpagenumber(e) {
        if (e == 'previous') {
            var cp = @Model.CurrentPage-1;
            $('#currentpagevalue').val(cp);
        }
        else if (e == 'next') {
            var cp = @Model.CurrentPage + 1;
            $('#currentpagevalue').val(cp);
        }
        else {
            $('#currentpagevalue').val(e);
        }
        $("#paginationform").submit();

        console.log("Hello pagination");
    }
</script>