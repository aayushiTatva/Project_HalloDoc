@using HalloDocMVC.DBEntity.ViewModels;
@model HalloDocMVC.DBEntity.ViewModels.AdminPanel.ViewUploadModel;

@{
    Layout = "../Shared/Patient/_LayoutPatientDashboard";
    ViewData["Title"] = "Documents";
}

<div class="d-flex justify-content-center">
    <div class="d-flex flex-column mb-2 col-lg-8 col-md-10 col-10">
        <div class="d-flex justify-content-between mb-2">
            <div>
                <strong class="fs-4">
                    Documents
                </strong>
            </div>
            <div class="col float-end">
                <a class="relogin ms-auto " asp-controller="CreateRequest" asp-action="Index"><button class="relogin shadow-none bg-white float-end">Back</button></a>
            </div>
        </div>
        <div class="shadow bg-white rounded p-3">
            <small class="text-secondary">Patient Name</small>
            <div>
                <strong class="text-info">@CV.UserName()</strong>
                <span>(@Model.ConfirmationNumber)</span>
            </div>
            <div class="mt-3">
                <small class="text-secondary">
                    Check here for any files that you or the doctors of your subsequents requestors have attached for you for review.
                </small>

                <form id="UploadFile" method="post" asp-controller="PatientDashboard" asp-action="UploadDoc" enctype="multipart/form-data" asp-route-id="@Model.RequestId">
                    <div class="d-flex justify-content-between bg-light border border-secondary rounded mt-3">
                        <button type="button" id="chooseFiles" class="col btn text-start text-secondary" onclick="document.getElementById('files').click()">
                            <span id="fileNames">Select Files</span>
                        </button>
                        <input id="files" type="file" class="d-none form-control doc_uploader" name="files" multiple onchange="DisplayFileNames()">
                        <input type="hidden" name="Requestid" value="@Model.RequestId" />
                        <button type="submit" class="btn btn-info text-white py-2" id="fileUploadBtn" value="Upload">
                            <i class="fa fa-cloud-upload"></i>
                            <span class="d-none d-sm-inline">Upload</span>
                        </button>
                    </div>
                </form>
            </div>
            <div class="d-flex justify-content-between mt-5">
                <div>
                    <strong class="fs-5">
                        Documents
                    </strong>
                </div>
                <div id="downloadAll">
                    <a class="d-block d-sm-none btn border border-info text-info">
                        <i class="fa-solid fa-cloud-arrow-down"></i>
                    </a>
                    <a class="d-none d-sm-block btn border border-info text-info">
                        Download All
                    </a>
                </div>
            </div>

            <!--Desktop View-->
            <div class="d-none d-sm-block table-responsive mt-3 mb-0">
                <table class="table mb-0">
                    <thead class="border-0">
                        <tr class="table-secondary">
                            <th scope="col" class="table-text-header px-3">
                                <div class="form-check">
                                    <input class="form-check-input " type="checkbox" id="topflexCheckDefault">
                                </div>
                            </th>
                            <th scope="col" class="table-text-header px-3">Document Name</th>
                            <th scope="col" class="table-text-header  px-3">Uploader</th>
                            <th scope="col" class="table-text-header">Upload date</th>
                            <th scope="col" class="table-text-header">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.documents)
                        {
                            <tr>
                                <td class="table-text px-3">
                                    <div class="form-check">
                                        <input class="form-check-input doc-checkbox" type="checkbox" value="" id="flexCheckDefault">
                                    </div>
                                </td>
                                <td class="table-text px-3 filename">@item.filename</td>
                                <td class="table-text px-3">@item.Uploader</td>
                                <td class="table-text px-3">@item.CreatedDate.ToString("MMM d , yyyy")</td>

                                <td class="table-text text-center ">
                                    <a class="btn btn-sm download-link btn-outline-info document-button" download href="@item.filename.Replace("~","")">
                                        <i class="fa fa-cloud-download"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <!--End Desktop View-->
            <!--Mobile screen View-->
            <div class="d-block d-sm-none border-top my-2">
                @foreach (var item in Model.documents)
                {
                    <div class="border-bottom">
                        <div class="d-inline-flex my-2">
                            <div class="form-check">
                                <input class="form-check-input doc-checkbox" type="checkbox" onclick="statusselectall()">
                            </div>
                            <div>
                                <small>@item.filename</small>
                            </div>
                        </div>
                        <div class="d-flex flex-column">
                            <label class="text-break"><small>@item.Uploader</small></label>
                            <label><small>@item.CreatedDate.ToString("MMM d , yyyy")</small></label>
                        </div>
                        <div class="mb-3">
                            <a class="btn btn-sm download-link btn-outline-info document-button" download href="@item.filename.Replace("~","")">
                                <i class="fa fa-cloud-download"></i>
                            </a>
                        </div>
                    </div>
                }
            </div>
            <!--End Mobile screen View-->
            <!--Pagination-->
            <nav aria-label="Page navigation example" id="paginationPatientDocuments">
                <div class="d-flex justify-content-between mx-2 mt-3">
                    <div>
                        @if (Model.TotalPages == 0)
                        {
                            Model.CurrentPage = 0;
                        }
                        Page @Model.CurrentPage / @Model.TotalPages
                    </div>
                    <div>
                        <ul class="pagination pagination-container">
                            @{
                                int i;
                                <form id="paginationform" asp-controller="PatientDashboard" asp-action="ViewDocuments" novalidate="novalidate" class="d-flex">
                                    <input type="hidden" asp-for="PageSize" />
                                    <input type="hidden" asp-for="CurrentPage" id="currentpagevalue" />

                                    @if (@Model.CurrentPage > 1)
                                    {
                                    <li class="page-item me-2">
                                        <button class="btn shadow-none" onclick="setpagenumber('previous')">&lt;</button>
                                    </li>
                                    }
                                    else
                                    {
                                    <li class="me-2 page-item">
                                        <button class="disabled btn">&lt;</button>
                                    </li>
                                    }
                                    @for (i = 1; i <= @Model.TotalPages; i++)
                                    {
                                    <li class="page-item me-2">
                                        <button class="@(i == @Model.CurrentPage ? "activePage" : "") btn shadow-none" onclick="setpagenumber(@i)">@i</button>
                                    </li>
                                    }
                                    @if (@Model.TotalPages > @Model.CurrentPage)
                                    {
                                    <li class="page-item me-2">
                                        <button class="btn shadow-none" onclick="setpagenumber('next')">&gt;</button>
                                    </li>
                                    }
                                    else
                                    {
                                    <li class="page-item">
                                        <button class="btn disabled">&gt;</button>
                                    </li>
                                    }
                                </form>
                            }
                        </ul>
                    </div>
                </div>
            </nav>
            <!--End Pagination-->
        </div>
    </div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    modeldata = @Html.Raw(Json.Serialize(Model))

        $('.filename').each(function () {
            var fileName = $(this).text().trim();
            if (fileName.endsWith('.pdf')) {
                $(this).prepend('<i class="fa-solid fa-file-pdf" style="color: #be2323;font-size:1rem"></i> ');
            } else if (fileName.endsWith('.doc') || fileName.endsWith('.docx')) {
                $(this).prepend('<i class="fa-solid fa-file-doc" style="color: #74C0FC;font-size:1rem"></i> ');
            } else if (fileName.endsWith('.jpg') || fileName.endsWith('.jpeg') || fileName.endsWith('.png') || fileName.endsWith('.gif') || fileName.endsWith('.svg')) {
                $(this).prepend('<i class="fa-solid fa-images" style="color: #B197FC;font-size:1rem"></i> ');
            } else {
                $(this).prepend(' <i class="fa-solid fa-file" > </i>');
            }

        });

    $("#fileUploadBtn").click(function (e) {
        e.preventDefault();
        if ($('#files')[0].files[0] == undefined) {
            swal.fire({
                title: "Oops..",
                text: "Oops! Please Select One File ",
                icon: "error",
                showCancelButton: true,
                showConfirmButton: false,
                cancelButtonText: "Okay",
                cancelButtonColor: "#01BBE7",
            })
            return;
        } else {
            $('#UploadFile').submit();
        }
    });

    $('#downloadAll').click(function () {
        $('tbody tr').each(function () {
            if ($(this).find('.form-check-input').prop('checked')) {
                var downloadLink = $(this).find('.document-button').attr('href');
                var hiddenLink = document.createElement('a');
                hiddenLink.href = downloadLink;
                hiddenLink.target = '_blank';
                hiddenLink.download = '';
                document.body.appendChild(hiddenLink);
                hiddenLink.click();
                document.body.removeChild(hiddenLink);
            }
        });
        $('.t-tab > .border-bottom').each(function () {
            if ($(this).find('.form-check-input').prop('checked')) {
                var downloadLink = $(this).find('.document-button').attr('href');
                var hiddenLink = document.createElement('a');
                hiddenLink.href = downloadLink;
                hiddenLink.target = '_blank';
                hiddenLink.download = '';
                document.body.appendChild(hiddenLink);
                hiddenLink.click();
                document.body.removeChild(hiddenLink);
            }
        });
    });

    $('#topflexCheckDefault').change(function () {
        $('.table tbody input[type="checkbox"]').prop('checked', $(this).is(':checked'));
    });

    // Uncheck main checkbox in header when any checkbox in table body is unchecked
    $('.table tbody input[type="checkbox"]').change(function () {
        if (!$(this).is(':checked')) {
            $('#topflexCheckDefault').prop('checked', false);
        }
    });

    // Check main checkbox in header when all checkboxes in table body are checked
    $('.table tbody input[type="checkbox"]').change(function () {
        var allChecked = true;
        $('.table tbody input[type="checkbox"]').each(function () {
            if (!$(this).is(':checked')) {
                allChecked = false;
                return false;
            }
        });

        if (allChecked) {
            $('#topflexCheckDefault').prop('checked', true);
        }
    });

    function setpagenumber(e) {
        if (e == 'previous') {
            var cp = @Model.CurrentPage-1;
            $('#currentpagevalue').val(cp);
        }
        else if (e == 'next') {
            var cp = @Model.CurrentPage + 1;
            $('#currentpagevalue').val(cp);
        }
        else {
            $('#currentpagevalue').val(e);
        }
        $("#paginationform").submit();

        console.log("Hello pagination");
    }
</script>